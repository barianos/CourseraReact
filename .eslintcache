[{"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\index.js":"1","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\reportWebVitals.js":"2","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\App.js":"3","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\MainComponent.js":"4","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\HomeComponent.js":"5","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\MenuComponent.js":"6","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\HeaderComponent.js":"7","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\DishdetailComponent.js":"8","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\AboutComponent.js":"9","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\FooterComponent.js":"10","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\ContactComponent.js":"11","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\leaders.js":"12","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\promotions.js":"13","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\dishes.js":"14","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\comments.js":"15","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\configureStore.js":"16","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\dishes.js":"17","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\comments.js":"18","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\promotions.js":"19","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\leaders.js":"20","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\ActionTypes.js":"21","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\ActionCreators.js":"22","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\LoadingComponent.js":"23","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\forms.js":"24","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\baseUrl.js":"25"},{"size":663,"mtime":1613121323113,"results":"26","hashOfConfig":"27"},{"size":375,"mtime":1613121323113,"results":"28","hashOfConfig":"27"},{"size":547,"mtime":1613136386227,"results":"29","hashOfConfig":"27"},{"size":5071,"mtime":1613308344318,"results":"30","hashOfConfig":"27"},{"size":1628,"mtime":1613251359953,"results":"31","hashOfConfig":"27"},{"size":1723,"mtime":1613237377606,"results":"32","hashOfConfig":"27"},{"size":5143,"mtime":1613140378180,"results":"33","hashOfConfig":"27"},{"size":6211,"mtime":1613244566929,"results":"34","hashOfConfig":"27"},{"size":4777,"mtime":1613301712711,"results":"35","hashOfConfig":"27"},{"size":3234,"mtime":1613125911244,"results":"36","hashOfConfig":"27"},{"size":9379,"mtime":1613301395630,"results":"37","hashOfConfig":"27"},{"size":2339,"mtime":1613121323123,"results":"38","hashOfConfig":"27"},{"size":436,"mtime":1613121323123,"results":"39","hashOfConfig":"27"},{"size":1336,"mtime":1613121323118,"results":"40","hashOfConfig":"27"},{"size":3769,"mtime":1613121323118,"results":"41","hashOfConfig":"27"},{"size":721,"mtime":1613229752482,"results":"42","hashOfConfig":"27"},{"size":677,"mtime":1613299084013,"results":"43","hashOfConfig":"27"},{"size":567,"mtime":1613244228298,"results":"44","hashOfConfig":"27"},{"size":697,"mtime":1613237025541,"results":"45","hashOfConfig":"27"},{"size":685,"mtime":1613246085515,"results":"46","hashOfConfig":"27"},{"size":705,"mtime":1613299659541,"results":"47","hashOfConfig":"27"},{"size":6519,"mtime":1613301432105,"results":"48","hashOfConfig":"27"},{"size":235,"mtime":1613226452160,"results":"49","hashOfConfig":"27"},{"size":158,"mtime":1613229668175,"results":"50","hashOfConfig":"27"},{"size":50,"mtime":1613236005956,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1psm4wn",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\index.js",[],["109","110"],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\reportWebVitals.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\App.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\MainComponent.js",["111"],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\HomeComponent.js",["112"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n} from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nfunction RenderCard({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />;\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>;\r\n  } else {\r\n    return (\r\n      <Card>\r\n        <CardImg src={baseUrl + item.image} alt={item.name} />\r\n        <CardBody>\r\n          <CardTitle>{item.name}</CardTitle>\r\n          {item.designation ? (\r\n            <CardSubtitle>{item.designation}</CardSubtitle>\r\n          ) : null}\r\n          <CardText>{item.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nfunction Home(props) {\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row align-items-start\">\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.dish}\r\n            isLoading={props.dishesLoading}\r\n            errMess={props.dishesErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.promotion}\r\n            isLoading={props.promosLoading}\r\n            errMess={props.promosErrMess}\r\n          />\r\n        </div>\r\n        <div className=\"col-12 col-md m-1\">\r\n          <RenderCard\r\n            item={props.leader}\r\n            isLoading={props.leadersLoading}\r\n            errMess={props.leadersErrMess}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\MenuComponent.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\HeaderComponent.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\DishdetailComponent.js",["113","114","115"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nfunction RenderDish({ dish }) {\r\n  if (null != dish) {\r\n    return (\r\n      <Card>\r\n        <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n        <CardBody>\r\n          <CardTitle>{dish.name}</CardTitle>\r\n          <CardText>{dish.description}</CardText>\r\n        </CardBody>\r\n      </Card>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n  console.log(comments);\r\n  if (comments != null) {\r\n    let list = comments.map((comment) => {\r\n      return (\r\n        <ul key={comment.id} className=\"list-unstyled\">\r\n          <li className=\"mb-2\">{comment.comment}</li>\r\n          <li>\r\n            -- {comment.author}{\" \"}\r\n            {new Intl.DateTimeFormat(\"en-US\", {\r\n              year: \"numeric\",\r\n              month: \"short\",\r\n              day: \"2-digit\",\r\n            }).format(new Date(Date.parse(comment.date)))}\r\n          </li>\r\n        </ul>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        {list}\r\n        <CommentForm dishId={dishId} postComment={postComment} />\r\n      </div>\r\n    );\r\n  } else return <div></div>;\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n  if (props.isLoading) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.errMess) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <h4>{props.errMess}</h4>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (props.dish != null) {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/menu\">Menu</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>{props.dish.name}</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row\">\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <RenderDish dish={props.dish} />\r\n          </div>\r\n          <div className=\"col-12 col-md-5 m-1\">\r\n            <h4>Comments</h4>\r\n            <RenderComments\r\n              comments={props.comments}\r\n              postComment={props.postComment}\r\n              dishId={props.dish.id}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div></div>;\r\n  }\r\n};\r\n\r\nclass CommentForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isModalOpen: false,\r\n    };\r\n    this.toggleModal = this.toggleModal.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  toggleModal() {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen,\r\n    });\r\n  }\r\n  handleSubmit(values) {\r\n    this.toggleModal();\r\n    this.props.postComment(\r\n      this.props.dishId,\r\n      values.rating,\r\n      values.author,\r\n      values.comment\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button outline onClick={this.toggleModal}>\r\n          <span className=\"fa fa-pencil fa-lg\"></span>Submit Comment\r\n        </Button>\r\n\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n          <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n          <ModalBody>\r\n            <LocalForm onSubmit={(values) => this.handleSubmit(values)}>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"rating\">Rating</Label>\r\n                <Control.select\r\n                  model=\".rating\"\r\n                  id=\"rating\"\r\n                  name=\"rating\"\r\n                  innerRef={(input) => (this.yourname = input)}\r\n                  className=\"form-control\"\r\n                >\r\n                  <option>1</option>\r\n                  <option>2</option>\r\n                  <option>3</option>\r\n                  <option>4</option>\r\n                  <option>5</option>\r\n                </Control.select>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"author\">Your Name</Label>\r\n                <Control.text\r\n                  model=\".author\"\r\n                  id=\"author\"\r\n                  name=\"author\"\r\n                  innerRef={(input) => (this.author = input)}\r\n                  className=\"form-control\"\r\n                  validators={{\r\n                    minLength: minLength(3),\r\n                    maxLength: maxLength(15),\r\n                  }}\r\n                />\r\n                <Errors\r\n                  className=\"text-danger\"\r\n                  model=\".author\"\r\n                  show=\"touched\"\r\n                  messages={{\r\n                    //required: \"Required\",\r\n                    minLength: \"Must be greater than 2 characters\",\r\n                    maxLength: \"Must be 15 characters or less\",\r\n                  }}\r\n                />\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"comment\">Comment</Label>\r\n                <Control.textarea\r\n                  rows=\"8\"\r\n                  model=\".comment\"\r\n                  id=\"comment\"\r\n                  name=\"comment\"\r\n                  innerRef={(input) => (this.comment = input)}\r\n                  className=\"form-control\"\r\n                />\r\n              </Row>\r\n\r\n              <Button type=\"submit\" value=\"submit\" color=\"primary\">\r\n                submit\r\n              </Button>\r\n            </LocalForm>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DishDetail;\r\n","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\AboutComponent.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\FooterComponent.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\ContactComponent.js",["116","117","118","119","120","121","122","123","124"],"import React, { Component } from \"react\";\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Button,\r\n  Label,\r\n  Col,\r\n  Row,\r\n} from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, Form, Errors, actions } from \"react-redux-form\";\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) =>\r\n  /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(values) {\r\n    //console.log(\"Current State is: \" + JSON.stringify(values));\r\n    //alert(\"Current State is: \" + JSON.stringify(values));\r\n    this.props.postFeedback(values);\r\n    this.props.resetFeedbackForm();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to=\"/home\">Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className=\"col-12\">\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className=\"fa fa-phone\"></i>: +852 1234 5678\r\n              <br />\r\n              <i className=\"fa fa-fax\"></i>: +852 8765 4321\r\n              <br />\r\n              <i className=\"fa fa-envelope\"></i>:{\" \"}\r\n              <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n            <div className=\"btn-group\" role=\"group\">\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-primary\"\r\n                href=\"tel:+85212345678\"\r\n              >\r\n                <i className=\"fa fa-phone\"></i> Call\r\n              </a>\r\n              <a role=\"button\" className=\"btn btn-info\">\r\n                <i className=\"fa fa-skype\"></i> Skype\r\n              </a>\r\n              <a\r\n                role=\"button\"\r\n                className=\"btn btn-success\"\r\n                href=\"mailto:confusion@food.net\"\r\n              >\r\n                <i className=\"fa fa-envelope-o\"></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row row-content\">\r\n          <div className=\"col-12\">\r\n            <h3>Send us your feedback</h3>\r\n          </div>\r\n          <div className=\"col-12 col-md-9\">\r\n            <Form\r\n              model=\"feedback\"\r\n              onSubmit={(values) => this.handleSubmit(values)}\r\n            >\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"firstname\" md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".firstname\"\r\n                    id=\"firstname\"\r\n                    name=\"firstname\"\r\n                    placeholder=\"First Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".firstname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"lastname\" md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".lastname\"\r\n                    id=\"lastname\"\r\n                    name=\"lastname\"\r\n                    placeholder=\"Last Name\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".lastname\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 characters\",\r\n                      maxLength: \"Must be 15 characters or less\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"telnum\" md={2}>\r\n                  Telephone Number\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".telnum\"\r\n                    id=\"telnum\"\r\n                    name=\"telnum\"\r\n                    placeholder=\"Telephone Number\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".telnum\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      minLength: \"Must be greater than 2 numbers\",\r\n                      maxLength: \"Must be 15 numbers or less\",\r\n                      isNumber: \"Must be a number\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"email\" md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model=\".email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    className=\"form-control\"\r\n                    validators={{\r\n                      required,\r\n                      validEmail,\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className=\"text-danger\"\r\n                    model=\".email\"\r\n                    show=\"touched\"\r\n                    messages={{\r\n                      required: \"Required\",\r\n                      validEmail: \"Invalid Email Address\",\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <div className=\"form-check\">\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model=\".agree\"\r\n                        name=\"agree\"\r\n                        className=\"form-check-input\"\r\n                      />{\" \"}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </div>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model=\".contactType\"\r\n                    name=\"contactType\"\r\n                    className=\"form-control\"\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Label htmlFor=\"message\" md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model=\".message\"\r\n                    id=\"message\"\r\n                    name=\"message\"\r\n                    rows=\"12\"\r\n                    className=\"form-control\"\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className=\"form-group\">\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type=\"submit\" color=\"primary\">\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\leaders.js",[],["125","126"],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\promotions.js",[],["127","128"],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\dishes.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\comments.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\configureStore.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\dishes.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\comments.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\promotions.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\leaders.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\ActionTypes.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\ActionCreators.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\components\\LoadingComponent.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\redux\\forms.js",[],"C:\\Users\\anast\\Documents\\WebDev\\confusion\\CourseraReact\\src\\shared\\baseUrl.js",[],["129","130"],{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","severity":1,"message":"136","line":49,"column":3,"nodeType":"137","messageId":"138","endLine":51,"endColumn":4},{"ruleId":"139","severity":1,"message":"140","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":158,"column":17,"nodeType":"145","endLine":164,"endColumn":18},{"ruleId":"143","severity":1,"message":"146","line":174,"column":17,"nodeType":"145","endLine":184,"endColumn":19},{"ruleId":"143","severity":1,"message":"147","line":198,"column":17,"nodeType":"145","endLine":205,"endColumn":19},{"ruleId":"139","severity":1,"message":"148","line":11,"column":33,"nodeType":"141","messageId":"142","endLine":11,"endColumn":40},{"ruleId":"149","severity":1,"message":"150","line":82,"column":15,"nodeType":"145","endLine":82,"endColumn":57},{"ruleId":"143","severity":1,"message":"146","line":109,"column":19,"nodeType":"145","endLine":120,"endColumn":21},{"ruleId":"143","severity":1,"message":"146","line":138,"column":19,"nodeType":"145","endLine":149,"endColumn":21},{"ruleId":"143","severity":1,"message":"146","line":167,"column":19,"nodeType":"145","endLine":179,"endColumn":21},{"ruleId":"143","severity":1,"message":"146","line":198,"column":19,"nodeType":"145","endLine":208,"endColumn":21},{"ruleId":"143","severity":1,"message":"151","line":224,"column":23,"nodeType":"145","endLine":228,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":234,"column":19,"nodeType":"145","endLine":238,"endColumn":20},{"ruleId":"143","severity":1,"message":"147","line":249,"column":19,"nodeType":"145","endLine":255,"endColumn":21},{"ruleId":"131","replacedBy":"152"},{"ruleId":"133","replacedBy":"153"},{"ruleId":"131","replacedBy":"154"},{"ruleId":"133","replacedBy":"155"},{"ruleId":"131","replacedBy":"156"},{"ruleId":"133","replacedBy":"157"},"no-native-reassign",["158"],"no-negated-in-lhs",["159"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","'actions' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE",["158"],["159"],["158"],["159"],["158"],["159"],"no-global-assign","no-unsafe-negation"]